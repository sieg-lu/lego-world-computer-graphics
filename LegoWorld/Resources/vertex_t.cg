// Vertex Shader
struct vertex {
	float4 position : POSITION;
	float3 normal : NORMAL;
	float4 color0 : COLOR0;
	float2 texcoord0 : TEXCOORD0;
};

struct fragment {
	float4 position : POSITION;
	float3 oNormal : TEXCOORD1;
	float4 color0 : COLOR0;
	float2 texcoord0 : TEXCOORD0;
	float3 objectPos : TEXCOORD2;
};

// This binding semantic requires CG_PROFILE_ARBVP1 or higher.
uniform float4x4 modelViewProj : state.matrix.mvp;

fragment vs_main(vertex IN)
{
	fragment OUT;
	OUT.position = mul(modelViewProj, IN.position);
	OUT.color0 = IN.color0;
	OUT.texcoord0 = IN.texcoord0;
	OUT.oNormal = IN.normal;
	OUT.objectPos = IN.position.xyz;

	return OUT;
}